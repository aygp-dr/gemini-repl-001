#!/usr/bin/expect -f
# Test script for conversation context

set timeout 15

# Check if API key is set
if {![info exists env(GEMINI_API_KEY)]} {
    puts "Error: GEMINI_API_KEY not set"
    exit 1
}

# Start the REPL
spawn node target/main.js

# Wait for banner
expect "Type /help"

# Test 1: Basic context - ask about a topic
send "What is the capital of France?\r"
expect "Gemini:"
expect "Paris"
expect ">"

# Test 2: Use pronoun reference
send "What is its population?\r"
expect "Gemini:"
expect {
    -re "population.*Paris|Paris.*population|million|inhabitants" {
        puts "\n✓ Context maintained - pronoun resolved correctly"
    }
    "need more context" {
        puts "\n✗ Context lost - pronoun not resolved"
        exit 1
    }
    timeout {
        puts "\n✗ Response timeout"
        exit 1
    }
}

# Wait for prompt
expect ">"

# Test 3: Technical context
send "Write a function to add two numbers\r"
expect "Gemini:"
expect ">"

send "Now make it handle three numbers\r"
expect "Gemini:"
expect {
    -re "three.*numbers|add.*three" {
        puts "\n✓ Technical context maintained"
    }
    timeout {
        puts "\n✗ Technical context lost"
        exit 1
    }
}

# Test 4: Check /context command
send "/context\r"
expect "Conversation Context:"
expect {
    "capital of France" {
        puts "\n✓ Context command shows history"
    }
    timeout {
        puts "\n✗ Context command failed"
        exit 1
    }
}

# Exit
send "/exit\r"
expect "Goodbye!"
expect eof

puts "\n✓ All context tests passed!"